--- 
wordpress_id: 243
layout: post
title: I&#8217;m a Certified ScrumMaster
wordpress_url: http://blog.sideline.ca/2006/04/22/im-a-certified-scrummaster/

<p>I recently attended a <a href="http://www.controlchaos.com/certification/">ScrumMaster certification</a> course here in town and have become a certified ScrumMaster.  I've been looking at implementing some type of <a href="http://en.wikipedia.org/wiki/Agile_software_development">Agile techniques</a> for a while and finally decided to focus on <a href="http://www.controlchaos.com/">Scrum</a>.</p>
<p>All Agile methodologies have the same basic idea:  customers don't know what the hell they want so there's no point busting your ass by creating a huge requirements doc at the beginning of the project.  Contrary to <a href="http://www.joelonsoftware.com/articles/AardvarkSpec.html">Joel's ideas</a>, <a href="http://en.wikipedia.org/wiki/Big_Design_Up_Front">Big Design Up Front</a> (BDUF) usually guarantees that your project will fail.  Most <a href="http://www.waterfall2006.com/">waterfall</a> projects use BDUF and try to manage change by implementing a rigorous <a href="http://en.wikipedia.org/wiki/Change_request">change request</a> process.  Agilists argue that while this can help control the chaos, it doesn't make the client happy and usually ends up forcing them into accepting a product that they don't really like.</p>
<p>Of course, there isn't any Agile magical wand either.  Instead, Agile methodologies like Scrum simply promote the value of having the customer involved in the project rather than only involving them during the BDUF stage.  By having the customer available, documentation can be minimized and developers can simply ask questions as they come up.  There is certainly still a need for some discussion and design at the start of the project but it is drastically reduced.</p>
<p align="center"><img alt="" hspace="10" src="http://www.controlchaos.com/images/diagram/flow.gif" vspace="10" border="0" /></p>
<p>In addition to involving the customer, Scrum is similar to other Agile processes in advocating an iterative development process.  Depending on the size of the project, these iterations (or 'sprints' in Scrum jargon) can last anywhere from 1 week to 4 weeks.  The goal at the end of the sprint is to have a <a href="http://codebetter.com/blogs/jeremy.miller/archive/2006/04/17/142972.aspx">working product that the client can use</a>.  Of course, this product will be feature limited if your schedule needs more than 1 sprint.  But the goal is to let the customer use the product and change it as they see fit.</p>
<p>I can just see all of the developers in the crowd gasping 'They can change the project after I've started it''.  The answer is Yes.  That's the beauty of Agile ' the customer can manage the development process to ensure that they get what they want.  The beast of Agile is that the cost can spiral out of control if the customer keeps changing their mind.  Of course, that's where a handy ScrumMaster has to manage the process to ensure that everyone is making informed decisions.</p>
<p>My primary purpose for attending the training was to help implement it at <a title="TG - Where I work" href="http://www.telusgeomatics.com">TG</a>.  I took along 6 of my guys to ensure that we all had a similar understanding and could call 'bullshit' whenever somebody tried to cheat the process.  I'm definitely attracted to the common sense project management that Scrum advocates.  It will be interesting to see if common sense is accepted in a corporate environment where common sense can sometimes be a 4'letter word.</p>
--- 
wordpress_id: 243
layout: post
title: I&#8217;m a Certified ScrumMaster
wordpress_url: http://blog.sideline.ca/2006/04/22/im-a-certified-scrummaster/

<p>I recently attended a <a href="http://www.controlchaos.com/certification/">ScrumMaster certification</a> course here in town and have become a certified ScrumMaster.  I've been looking at implementing some type of <a href="http://en.wikipedia.org/wiki/Agile_software_development">Agile techniques</a> for a while and finally decided to focus on <a href="http://www.controlchaos.com/">Scrum</a>.</p>
<p>All Agile methodologies have the same basic idea:  customers don't know what the hell they want so there's no point busting your ass by creating a huge requirements doc at the beginning of the project.  Contrary to <a href="http://www.joelonsoftware.com/articles/AardvarkSpec.html">Joel's ideas</a>, <a href="http://en.wikipedia.org/wiki/Big_Design_Up_Front">Big Design Up Front</a> (BDUF) usually guarantees that your project will fail.  Most <a href="http://www.waterfall2006.com/">waterfall</a> projects use BDUF and try to manage change by implementing a rigorous <a href="http://en.wikipedia.org/wiki/Change_request">change request</a> process.  Agilists argue that while this can help control the chaos, it doesn't make the client happy and usually ends up forcing them into accepting a product that they don't really like.</p>
<p>Of course, there isn't any Agile magical wand either.  Instead, Agile methodologies like Scrum simply promote the value of having the customer involved in the project rather than only involving them during the BDUF stage.  By having the customer available, documentation can be minimized and developers can simply ask questions as they come up.  There is certainly still a need for some discussion and design at the start of the project but it is drastically reduced.</p>
<p align="center"><img alt="" hspace="10" src="http://www.controlchaos.com/images/diagram/flow.gif" vspace="10" border="0" /></p>
<p>In addition to involving the customer, Scrum is similar to other Agile processes in advocating an iterative development process.  Depending on the size of the project, these iterations (or 'sprints' in Scrum jargon) can last anywhere from 1 week to 4 weeks.  The goal at the end of the sprint is to have a <a href="http://codebetter.com/blogs/jeremy.miller/archive/2006/04/17/142972.aspx">working product that the client can use</a>.  Of course, this product will be feature limited if your schedule needs more than 1 sprint.  But the goal is to let the customer use the product and change it as they see fit.</p>
<p>I can just see all of the developers in the crowd gasping 'They can change the project after I've started it''.  The answer is Yes.  That's the beauty of Agile ' the customer can manage the development process to ensure that they get what they want.  The beast of Agile is that the cost can spiral out of control if the customer keeps changing their mind.  Of course, that's where a handy ScrumMaster has to manage the process to ensure that everyone is making informed decisions.</p>
<p>My primary purpose for attending the training was to help implement it at <a title="TG - Where I work" href="http://www.telusgeomatics.com">TG</a>.  I took along 6 of my guys to ensure that we all had a similar understanding and could call 'bullshit' whenever somebody tried to cheat the process.  I'm definitely attracted to the common sense project management that Scrum advocates.  It will be interesting to see if common sense is accepted in a corporate environment where common sense can sometimes be a 4'letter word.</p>
